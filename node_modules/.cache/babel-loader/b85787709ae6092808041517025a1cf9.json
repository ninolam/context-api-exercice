{"ast":null,"code":"var _jsxFileName = \"/Users/nino.lamoureux/Desktop/context-api-exercice/src/TransactionContext.js\";\nimport React, { createContext, useContext, useState, useMemo } from 'react';\nconst TransactionContext = createContext();\n\nconst useTransaction = () => {\n  const context = useContext(TransactionContext);\n\n  if (!context) {\n    throw new Error(`useTransaction must be used within a CountProvider`);\n  }\n\n  return context;\n};\n\nconst TransactionProvider = props => {\n  const [transaction, setTransaction] = useState({\n    id: '',\n    text: '',\n    amount: 0\n  });\n  const value = useMemo(() => [transaction, setTransaction], [transaction]);\n  return /*#__PURE__*/React.createElement(TransactionContext.Provider, Object.assign({\n    value: value\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport { TransactionProvider, useTransaction };","map":{"version":3,"sources":["/Users/nino.lamoureux/Desktop/context-api-exercice/src/TransactionContext.js"],"names":["React","createContext","useContext","useState","useMemo","TransactionContext","useTransaction","context","Error","TransactionProvider","props","transaction","setTransaction","id","text","amount","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,EAA0CC,QAA1C,EAAoDC,OAApD,QAAkE,OAAlE;AAEA,MAAMC,kBAAkB,GAAGJ,aAAa,EAAxC;;AAEA,MAAMK,cAAc,GAAG,MAAM;AAC3B,QAAMC,OAAO,GAAGL,UAAU,CAACG,kBAAD,CAA1B;;AACA,MAAI,CAACE,OAAL,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAW,oDAAX,CAAN;AACD;;AACD,SAAOD,OAAP;AACD,CAND;;AASA,MAAME,mBAAmB,GAAIC,KAAD,IAAW;AACrC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC;AAC7CU,IAAAA,EAAE,EAAE,EADyC;AAE7CC,IAAAA,IAAI,EAAE,EAFuC;AAG7CC,IAAAA,MAAM,EAAE;AAHqC,GAAD,CAA9C;AAKA,QAAMC,KAAK,GAAGZ,OAAO,CAAC,MAAM,CAACO,WAAD,EAAcC,cAAd,CAAP,EAAsC,CAACD,WAAD,CAAtC,CAArB;AACA,sBAAO,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEK;AAApC,KAA+CN,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CARD;;AAUA,SAAQD,mBAAR,EAA6BH,cAA7B","sourcesContent":["import React, {createContext, useContext, useState, useMemo} from 'react'\n\nconst TransactionContext = createContext()\n\nconst useTransaction = () => {\n  const context = useContext(TransactionContext)\n  if (!context) {\n    throw new Error(`useTransaction must be used within a CountProvider`)\n  }\n  return context\n}\n\n\nconst TransactionProvider = (props) => {\n  const [transaction, setTransaction] = useState({\n    id: '',\n    text: '',\n    amount: 0\n  })\n  const value = useMemo(() => [transaction, setTransaction], [transaction])\n  return <TransactionContext.Provider value={value} {...props} />\n}\n\nexport {TransactionProvider, useTransaction}\n\n"]},"metadata":{},"sourceType":"module"}